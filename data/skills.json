[
  {
    "section": "Programming",
    "groups": [
      {
        "group": "Requirements",
        "subgroups": [
          {
            "level": 1,
            "description": "Takes the given requirements and codes to spec",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 2,
            "description": "Clarifies spec. through questions regarding missed cases and ambigious requirements",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 3,
            "description": "Understand complete picture and come up with entire areas that need to be speced",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Able to suggest better alternatives and flows to given requirements based on experience",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Testing",
        "subgroups": [
          {
            "level": 1,
            "description": "Unit testing, enzyme, sinon, tape/mocha",
            "skillsets": [],
            "resources": false,
            "goals": [
              123,
              128,
              156,
              157,
              158,
              159
            ]
          },
          {
            "level": 2,
            "description": "Separates unit and integration tests, checks code coverage, understands TDD-guided design",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 3,
            "description": "Always writes tests first, Functional testing (selenium), Understands benefits of TDD",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Uses static analysis tools like cyclomatic complexity and afferent/efferent coupling checks, patterns (GoF and Fowler), nonfunctional testing (capacity testing)",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Object Oriented Programming",
        "subgroups": [
          {
            "level": 1,
            "description": "Objects. Scope. Public/private methods and properties",
            "skillsets": [],
            "resources": false,
            "goals": [
              128
            ]
          },
          {
            "level": 2,
            "description": "Inheritence. Class composition. SOLID. ",
            "skillsets": [],
            "resources": false,
            "goals": [
              165
            ]
          },
          {
            "level": 4,
            "description": "Factory patterns, and other OO design patterns",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Advanced OO",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Functional Programming",
        "subgroups": [
          {
            "level": 1,
            "description": "Immutability, .map and .reduce",
            "skillsets": [],
            "resources": false,
            "goals": [
              124,
              128
            ]
          },
          {
            "level": 2,
            "description": "Composition with higher-order function decorators, currying",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 4,
            "description": "Generators/co-routines, memoization, lazy evaluation",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Understands deeply tradeoff/philosophy of functional programming",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Systems Decomposition",
        "subgroups": [
          {
            "level": 1,
            "description": "Able to think/build within the level of a single file/class",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 2,
            "description": "Able to break up problem space and design solution as long as it is within the same platform/technology",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 4,
            "description": "Able to design and work in systems that span multiple technologies/platforms.",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Able to visualize and design complex systems with multiple product lines and integrations with external systems. Also should be able to design operations support systems like monitoring, reporting, fail overs etc.",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Problem Decomposition",
        "subgroups": [
          {
            "level": 1,
            "description": "Able to come up with reusable functions/objects that solve the overall problem. Basic code reuse (no copy/paste)",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 2,
            "description": "Use of appropriate data structures and algorithms and comes up with generic/object-oriented code that encapsulate aspects of the problem that are subject to change.",
            "skillsets": [],
            "resources": false,
            "goals": [
              128,
              144
            ]
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": [
              125
            ]
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Data Structures",
        "resources": false,
        "subgroups": [
          {
            "level": 1,
            "description": "Basic ADTs (array vs hash vs stack vs queue), ",
            "skillsets": [],
            "resources": false,
            "goals": [
              156
            ]
          },
          {
            "level": 3,
            "description": "More nuanced ADTs (directed vs nondirected graphs, trees, etc.). Able to explain and use Arrays, Stacks, Queus, Dictionaries etc in practical programming tasks",
            "skillsets": [],
            "resources": false,
            "goals": [
              128,
              157
            ]
          },
          {
            "level": 4,
            "description": "Knows space and time tradeoffs of the basic data structures, Arrays vs LinkedLists, Able to explain how hashtables can be implemented and can handle collisions, Priority queues and ways to implement them etc.",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 6,
            "description": "Basic mathematical proofs of data structure performance. Knowledge of advanced data structures like B-trees, binomial and fibonacci heaps, AVL/Red Black trees, Splay Trees, Skip Lists, tries etc.",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Algorithms",
        "subgroups": [
          {
            "level": 2,
            "description": "Basic sorting, searching and data structure traversal and retrieval algorithms",
            "skillsets": [],
            "resources": false,
            "goals": [
              144,
              159
            ]
          },
          {
            "level": 3,
            "description": "Big O notation. Tree, Graph, Pathfinding, simple greedy and divide and conquer algorithms. More nuanced algorithms (pathfinding, tree-traversal)",
            "skillsets": [],
            "resources": false,
            "goals": [
              123,
              158
            ]
          },
          {
            "level": 5,
            "description": "Able to recognize and code dynamic programming solutions, good knowledge of graph algorithms, good knowledge of numerical computation algorithms, able to identify NP problems etc.",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 6,
            "description": "Concrete mathematical evaluation of tradeoffs between algorithms and data structures.",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Regular Expressions",
        "subgroups": [
          {
            "level": 3,
            "description": "Basic Regular Expressions",
            "skillsets": [
              "Identify, explain, and apply special characters in a regular expression",
              "Identify, explain, and apply non-printable characters in a regular expression",
              "Identify, explain, and apply dot in a regular expression",
              "Identify, explain, and apply alternation in a regular expression",
              "Identify, explain, and apply character classes in a regular expression"
            ],
            "resources": false,
            "goals": [
              123,
              144
            ]
          },
          {
            "level": 4,
            "description": "Intermediate Regular Expressions",
            "skillsets": [
              "Identify, explain, and apply shorthand character classes in a regular expression",
              "Identify, explain, and apply anchors in a regular expression",
              "Identify, explain, and apply word boundaries in a regular expression",
              "Identify, explain, and apply optional items in a regular expression",
              "Identify, explain, and apply repetition in a regular expression"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Advanced Regular Expressions",
            "skillsets": [
              "Identify, explain, and apply grouping & capturing in a regular expression",
              "Identify, explain, and apply named groups in a regular expression",
              "Identify, explain, and apply backreferences in a regular expression",
              "Identify, explain, and apply mode modifiers in a regular expression",
              "Differentiate between regular expressions and a formal programming language"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 6,
            "description": "Ninja-level Regular Expressions",
            "skillsets": [
              "Identify, explain, and apply possessive quantifiers in a regular expression",
              "Identify, explain, and apply free-spacing & comments in a regular expression",
              "Identify, explain, and apply atomic grouping in a regular expression",
              "Identify, explain, and apply lookahead & lookbehind in a regular expression",
              "Identify, explain, and apply conditionals in a regular expression",
              "Cite differences in regular expression syntax between two or more languages"
            ],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Systems Programming",
        "subgroups": [
          {
            "level": 5,
            "description": "Basic understanding of compilers, linker and interpreters. Understands what assembly code is and how things work at the hardware level. Some knowledge of virtual memory and paging.",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 6,
            "description": "Understands kernel mode vs. user mode, multi-threading, synchronization primitives and how they're implemented, able to read assembly code. Understands how networks work, understanding of network protocols and socket level programming.",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 6,
            "description": "Understands the entire programming stack, hardware (CPU + Memory + Cache + Interrupts + microcode), binary code, assembly, static and dynamic linking, compilation, interpretation, JIT compilation, garbage collection, heap, stack, memory addressing...",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      }
    ]
  },
  {
    "section": "Javascript",
    "groups": [
      {
        "group": "Vanilla Javascript",
        "subgroups": [
          {
            "level": 1,
            "description": "The Basics. (jared's notes)",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 2,
            "description": "Functional Patterns",
            "skillsets": [],
            "resources": false,
            "goals": [
              150
            ]
          },
          {
            "level": 2,
            "description": "Object Oriented Patterns",
            "skillsets": [],
            "resources": false,
            "goals": [
              165
            ]
          },
          {
            "level": 4,
            "description": "How the event loop works, how browser APIs and webworkers work, how browser rendering happens, knowledge of V8 JIT compilation",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Debugging Javascript",
        "subgroups": [
          {
            "level": 1,
            "description": "Simple backtracing, logging, and error throwing",
            "skillsets": [
              "reading backtraces",
              "logging relevant events and values",
              "throwing errors for edge cases"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 2,
            "description": "Backtraces, setping up and down, break points",
            "skillsets": [
              "logging backtraces with `console.trace`",
              "use debugger to step up and down the call stack",
              "use debugger to evaling code at a specific point the program",
              "use debugger to set break points"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 4,
            "description": "Conditional BPs, watch statements, lexical scope, stitched backtraces",
            "skillsets": [
              "set conditional break points",
              "set watch statements",
              "example the lexical scope inheritence tree",
              "reading stitched backtraces"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "CORE dump files, V8 level errors",
            "skillsets": [
              "Examining CORE dump files",
              "Debugging V8 level errors"
            ],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Javascript Tools",
        "subgroups": [
          {
            "level": 1,
            "description": "Console, elements tabs of devtools, sparsely configured editor",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 2,
            "description": "ternjs, eslint, nyc, well-configured editor, can use node in debug mode, network and sources tabs in devtools, devtools plugins",
            "skillsets": [],
            "resources": false,
            "goals": [
              144
            ]
          },
          {
            "level": 4,
            "description": "devtools profiling, device simulation, and network throttling; IRHydra2",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "ES6",
        "subgroups": [
          {
            "level": 3,
            "description": "ES6 transpilation to ES5, memorized browser/node compatability, more in-depth quirks (like the difference between arrow functions and named functions, how .prototype might trip you up)",
            "skillsets": [
              "write es6 (let/const, arrow functions, class, etc.), can set up a .babelrc"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 4,
            "description": "Control-flow: generators, async/await, knows how `class` transpiles to ES5 and when to use it vs functions, know popular .babelrc configs and when to use babel-register babel-node and babel-polyfill, aware of browser/node compatability, knowledge of upcoming features",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 6,
            "description": "Contributes to babel or a babel plugin, contributes to discussions on the future of ES6",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Performance",
        "subgroups": [
          {
            "level": 5,
            "description": "knows what garbage collection is, knows _when_ to optimize",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "inspect heap to isolate memory leaks, CPU profile to find cpu-intensive functions",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "improve node performance by examining generated assembly, has written transpiler or transpiling plugins\n",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 6,
            "description": "Has optimized V8 performance by analyzing generated assembly (IRHydra2)",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      }
    ]
  },
  {
    "section": "Frontend",
    "groups": [
      {
        "group": "CSS and HTML",
        "subgroups": [
          {
            "level": 1,
            "description": "CSS & HTML fundamentals. Basic selectors, properties, formatting, dev tools.",
            "skillsets": [
              "understands the tree structure",
              "Formatting: text / font / type",
              "css units: px, em",
              "relative vs absolute path URLs",
              "positioning with: display: inline, display: block, display: inline-block, position: relative",
              "explain how HTML is a tree",
              "properly use these node types `html, head, body, script, link, title, div, span, a, button, p, ul, li, table, tbody, tr, th, td`",
              "include assets like stylesheets, javascripts and images",
              "explain the box model",
              "explain the difference between inline, block and inline-block",
              "explain when to use an id vs. a class name",
              "read, understand and author these kinds of CSS selectors, nodeName, classname, space, comma",
              "understands these CSS selectors `.signup-form`, `.signup-form .first-name-field`, `table.stripped-table`, `a.button:hover`, `.IconButton > button`, `table > tr:nth-child(odd)`",
              "is familiar with and can use these pseudo selectors `:hover,:focus,:active,:visited,:disabled,:checked,:nth-child`",
              "is familiar with and can use these CSS properties: `border, margin, padding, height, width, background, display, color, font-size, font-weight, flex-direction, flex-wrap, justify-content, align-items, align-content, flex-grow`",
              "select an element in the DOM tree in Chrome Developer Tools",
              "should be able to implement a two column layout",
              "is familiar with the concept of reset stylesheet and why to use one",
              "knows difference between inline and .css files",
              "prevent the default behavior of a DOM event",
              "create a link to a specific scroll position on the page using an anchor tag"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 2,
            "description": "More selectors, units, validations",
            "skillsets": [
              "css selector weight",
              "css units: vh, vw, %",
              "forms: inputs/validations",
              "css selectors parts: *, >, +, [attr='x']",
              "pseudo selectors: :before, :after, :nth-child",
              "position with: position: fixed, flexbox, float",
              "classname patterns like BEM",
              "vendor prefixes",
              "should be able to use a web font",
              "should be able to use an Icon font",
              "track asset loading requests in the network tab of Chrome Developer Tools",
              "explain event bubbling",
              "explain event delegation",
              "give an example of when it's appropriate to apply styles to a node like `button { … }` as opposed to using a unique classname `.button { … }`",
              "should be able to implement a simple modal",
              "should be able to implement a fixed navbar",
              "should be able to implement a `sticky footer`",
              "should be able to implement a button that depresses when clicked",
              "should be able to implement a dropdown menu"
            ],
            "resources": false,
            "goals": [
              150,
              120,
              83
            ]
          },
          {
            "level": 3,
            "description": "Transitions, animations and data attributes",
            "skillsets": [
              "css selectors parts: ~=, |=, ^=, $=",
              "pseudo selectors: :not",
              "@media queries",
              "transitions",
              "animations",
              "data attributes"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "CSS4, render engines, cross-browser quirks",
            "skillsets": [
              "CSS4 features",
              "Can contribute to pre-processor OSS or CSS4 spec",
              "in-depth off-hand knowledge of cross-browser quirks",
              "browser render engines (stacking context)"
            ],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "JS in the Browser",
        "subgroups": [
          {
            "level": 1,
            "description": "Accessing & modifying DOM nodes, responding to user interactions, debugging with chrome developer tools",
            "skillsets": [
              "Accessing & modifying DOM nodes",
              "Responding to user interactions",
              "binding to key browser load lifecylce events",
              "examining the DOM tree using the Chrome Developer Tools",
              "examining all HTTP requests using the Chrome Developer Tools",
              "knows patterns to avoid defining globals"
            ],
            "resources": false,
            "goals": [
              120
            ]
          },
          {
            "level": 2,
            "description": "AJAX / XHR",
            "skillsets": [
              "creating DOM nodes and injecting them into the DOM",
              "useing `data-` attributes",
              "debugging with the Chrome Developer Tools 'Source' tab",
              "setting break points",
              "optomizing performance of DOM reads & writes",
              "using `localStorage` and `sessionStorage`"
            ],
            "resources": false,
            "goals": [
              150,
              83
            ]
          },
          {
            "level": 4,
            "description": "Memory leaks and cookies",
            "skillsets": [
              "aware of common DOM API usage anti-patterns that lead to memory leaks",
              "reading and writing cookie values"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Profiling and Garbage collection",
            "skillsets": [
              "Profiling performance using the Chrome Developer Tools 'Timeline' tab",
              "Optimizing for Garbage collection"
            ],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "React",
        "subgroups": [
          {
            "level": 3,
            "description": "write JSX, knows the lifecycle events",
            "skillsets": [],
            "resources": false,
            "goals": [
              120
            ]
          },
          {
            "level": 3,
            "description": "Knows when to use stateless vs stateful components, aware of common patterns (smart/dumb components), state management with *x library, knows top-level API, knows how React renders and how to improve performance, knowledge of common sister libraries (react-router, redux, etc.), has built a basic, medium-sized app (could build their own boilerplate)",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 4,
            "description": "Has used cutting edge techs (Relay, GraphQL), has shipped a project into production, well-versed in testing react apps (enzyme), knows most common patterns and pitfalls (for instance, why mixins and isMounted() are antipatterns)",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Contributes to OSS, has read or contributed to React/*x source, has written a higher-order component, can write server-side-rendered apps if necessary",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "UI and UX Design",
        "subgroups": [
          {
            "level": 3,
            "description": "Basic UI/UX: Elements, color, layout wireframing, and typography",
            "skillsets": [
              "Identify and describe common UI elements (navigation, headers, containers, tabs, modals, etc.)",
              "Explain and apply layout in a UI design",
              "Explain and apply color usage in a UI design",
              "Explain and apply typography in a UI design",
              "Wireframe an app on paper or a whiteboard",
              "Use common symbols, shapes, and graphics in a wireframe"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 4,
            "description": "Intermediate UI/UX: whitespace, responsive design, color theory, grids, and visual heirarchy/weight.",
            "skillsets": [
              "Use a grid for UI design",
              "Use Sketch to design a web UI",
              "Explain and apply visual hierarchy in a UI design",
              "Explain and apply visual weight in a UI design",
              "Explain and apply whitespace in a UI design",
              "Explain and apply color theory in a UI design",
              "Design a web page with functional UI at 2 screen widths",
              "Design a web page with functional UI at 3 screen widths"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Advanced UI/UX: accessibility, more responsive & visual design",
            "skillsets": [
              "Identify and explain common visual design principles",
              "Create a mood board for a project",
              "Create style tiles for a project",
              "Explain and apply accessibility in a UI design",
              "List and explain core principles of responsive design",
              "Describe and apply a mobile-first design approach",
              "Design a web page with functional UI at 4+ screen widths",
              "Apply UX/UI design principles to web applications",
              "Wireframe an app using wireframe software",
              "Demonstrate user flow in a wireframe"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Webpack",
        "subgroups": [
          {
            "level": 3,
            "description": "write a basic config file",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 4,
            "description": "configure hot loading, has good familiarity with common plugins, has set up a custom dev server (webpack-dev-middleware)",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 6,
            "description": "Has configured multiple entry points, has used isomorphic-webpack, has written a webpack plugin",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Design",
        "subgroups": [
          {
            "level": 3,
            "description": "follow a design language (Material Design)",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Color, shape, grids, animation fundamentals, can suggest improvements to popular design languages",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 6,
            "description": "Psychological foundations of design (psychological biases), creator of design language",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "React Native",
        "subgroups": [
          {
            "level": 5,
            "description": "write a basic RN app, knows the primitives (View, Image, Text)",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 6,
            "description": "write iOS or Android plugins, app on app store, has read some of the RN source, knows most of the APIs/Components off-hand",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 6,
            "description": "write Android AND iOS plugins, app runs through CI server, contributes to OSS or React Native repo",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Template",
        "subgroups": [
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ]
      }
    ]
  },
  {
    "section": "Backend",
    "groups": [
      {
        "group": "Web Application Architecture",
        "subgroups": [
          {
            "level": 1,
            "description": "Basic web architecture. HTTP servers, static assets, templates, cookies, HTTP status, ports",
            "skillsets": [
              "Identify, explain, and apply logging in a web app",
              "Identify, explain, and write a server file for a web app",
              "Identify, explain, and apply routers in a web app",
              "Identify, explain, and apply views in a web app",
              "Build a web app that serves multiple static view files",
              "explain the requests & response life cycle",
              "articulate the difference between a standard HTTP request and an AJAX / XHR request",
              "articulate the difference between 'front end' and 'back end'",
              "draw a diagram showing how data/messages flow from the browser, to the server and back again with detail about the contents sent within those messages",
              "list the most commonly used HTTP headers",
              "articulate the difference between a `get` and a `post` request",
              "explain what a port is",
              "roughly explain how a web browser talks to a web server",
              "explain how Authentication via HTTP Cookies works",
              "Explain a common file structure for a web app",
              "Build a web app that renders views with dynamic data",
              "setup an express app with signup, login and logout functionality",
              "render `HTML` from a `pug` template in response to a request",
              "render `JSON` in response to a request",
              "Identify, explain, and apply authorization in a web app",
              "Identify, explain, and apply authentication in a web app",
              "Identify, explain, and apply database integration in a web app",
              "Identify, explain, and apply redirects in a web app",
              "Build a web app with user authentication",
              "Build a web app that renders HTML on the client"
            ],
            "resources": false,
            "goals": [
              150
            ]
          },
          {
            "level": 2,
            "description": "Authorization, asset managers, sockets, REST, API",
            "skillsets": [
              "Identify, explain, and apply controllers in a web app",
              "Identify, explain, and apply server side rendering in a web app",
              "Identify, explain, and apply view templates in a web app",
              "Identify, explain, and apply environment variables for a web app",
              "Build a web app with user authorization",
              "Understand and use sockets",
              "Understand and use asset packaging like webpack or browserify",
              "Identify, explain, and apply the RESTful routing pattern",
              "Implement the routes for a RESTful resource",
              "Implement the routes for a nested RESTful resource",
              "Design and Implement RESTful APIs"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 3,
            "description": "MVC, client side rendering and error handling",
            "skillsets": [
              "Identify, explain, and apply the Model-View-Controller pattern in a web app",
              "Identify, explain, and apply models in a web app",
              "Build a web app that implements the MVC pattern",
              "Build a web app that manages persistent resources",
              "Identify, explain, and apply client side rendering in a web app",
              "Identify, explain, and apply error handling in a web app",
              "Build a web app with graceful error handling"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 4,
            "description": "Helpers, OAuth, caching, security, config files, HTTPS, Service-Oriented Architecture",
            "skillsets": [
              "Identify, explain, and apply helpers in a web app",
              "Use OAuth to authenticate with a third-party service",
              "Identify and explain caching in a web app",
              "Identify and explain security in a web app",
              "Identify and explain environment config files in a web app",
              "Build a web app that uses HTTPS for sensitive material",
              "Analyze the security of a web app",
              "Build a web app that uses caching",
              "Build a web app that uses environment config variables",
              "Identify, design, and implement Service-Oriented architecture"
            ],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Node",
        "subgroups": [
          {
            "level": 1,
            "description": "Basic npm, Basic HTTP server (kow/express), aware of basic API methods",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 2,
            "description": "Difference between sync and async functions, middleware, basic authentication, basic security",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 3,
            "description": "Integrations with other services, SSO, SSR",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "compilation/es6/async functions, security audits",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Database",
        "subgroups": [
          {
            "level": 1,
            "description": "Good relational Design, postgres & SQL basics, normalization, ACID. Can write basic read/write queries. ",
            "skillsets": [
              "install postgres via homebrew",
              "start and stop postgres via `brew services`",
              "create a delete psotgres databases",
              "use the `psql` REPL to connect to postgres at a specific database",
              "`describe` a database and a table in the `psql` console",
              "create a table with multiple columns of different types",
              "design a schema with two tables that have a 1-1 relationship",
              "design a schema with two tables that have a 1-N relationship",
              "design a schema with two tables that have an N-N relationship",
              "write select queries that use the following features: `*, FROM, WHERE, ORDER`",
              "write a 1-1 relationship query`",
              "write a 1-N relationship query`",
              "write a N-N relationship query`",
              "explain `normalization` and `demoralization`",
              "design a schema for a given data set and list of questions that need answering",
              "understand ACID principles at a high level, and explain why they are useful"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 2,
            "description": "ORM or patterns, migrations, can write more complex queries (joins, subqueries, etc.). Able to design good and normalized database schemas keeping in mind the queries that'll have to be run. ",
            "skillsets": [],
            "resources": false,
            "goals": [
              126,
              127
            ]
          },
          {
            "level": 3,
            "description": "document vs relational, uses transactions, basic knowledge of multiple techs (mongo, postgresql, elasticsearch, etc.). Proficient in use of views, stored procedures, triggers and user defined types. Knows difference between clustered and non-clustered indexes. ",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "In-depth knowledge of multiple techs (mongo, postgresql, elasticsearch, etc.). db mgmt and devops. db internals.",
            "skillsets": [
              "basic database administration",
              "performance optimization",
              "index optimization",
              "worked with large in-production databases",
              "hot standby + automatic backups + rollbacks + ZDT deployments",
              "write advanced select queries",
              "able to replace cursor usage with relational sql",
              "understands how data is stored internally",
              "understands how indexes are stored internally",
              "understands how databases can be mirrored, replicated etc",
              "understands how the two phase commit works."
            ],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "HTTP",
        "subgroups": [
          {
            "level": 1,
            "description": "Basic codes, headers, post/get, URL, and parsing",
            "skillsets": [
              "anatomy of a URL",
              "verbs: get, post",
              "headers: Accepts, Content-type",
              "status codes: 200, 404, 500",
              "params",
              "post body parsing",
              "articulate the difference between a standard HTTP request and an AJAX / XHR request",
              "list the most commonly used HTTP verbs",
              "list the most commonly used HTTP headers",
              "explain at a high level how Authentication via HTTP Cookies works"
            ],
            "resources": [],
            "goals": []
          },
          {
            "level": 2,
            "description": "redirects, cookies, authentication, put/patch/delete, error codes",
            "skillsets": [
              "redirects",
              "verbs: put, patch, delete",
              "headers: Cookie, Set-cookie",
              "status codes: 201, 202, 204, 301, 302, 401, 403,",
              "cookies & authentication",
              "surface understanding of the roles DNS and TCP play",
              "articulate the difference between a `get` and a `post` request",
              "explain how Authentication via HTTP Cookies works",
              "articulate the difference between a standard HTTP request and an AJAX / XHR request",
              "understand and use different HTTP error codes properly"
            ],
            "resources": [],
            "goals": []
          },
          {
            "level": 4,
            "description": "CORS, advanced headers, web sockets",
            "skillsets": [
              "CORS",
              "verbs: options, head",
              "headers: Origin, Access-Control-*",
              "status codes: 304",
              "basic caching headers",
              "headers: Cache-control, Expires, Last-Modified",
              "web sockets"
            ],
            "resources": [],
            "goals": []
          },
          {
            "level": 5,
            "description": "Load balancing, eTag, reverse proxy caching",
            "skillsets": [
              "load balancing",
              "headers: eTag",
              "reverse proxy caching"
            ],
            "resources": [],
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "API",
        "subgroups": [
          {
            "level": 1,
            "description": "understand API documentation and write code that consumes it",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 2,
            "description": "Understands and is able to design a basic API and consume it",
            "skillsets": [],
            "resources": false,
            "goals": [
              127
            ]
          },
          {
            "level": 4,
            "description": "Understands the ins and outs of great API design",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Experience with service oriented architecture design and implementation",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Continuous Deployment",
        "subgroups": [
          {
            "level": 2,
            "description": "build a script that compiles the code for production",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 2,
            "description": "Code is automatically built and tested through a CI server",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 3,
            "description": "Configuration AND environment (Docker) is managed, functional AND nonfunctional (capacity) tests are automatically run",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 4,
            "description": "N-tier archicture deployments are orchestrated (ansible, kubernetes) into a cloud-based environment, push-button deployment and other tools from an admin page",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Security",
        "subgroups": [
          {
            "level": 2,
            "description": "Cleans requests from API",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 4,
            "description": "Defends against CSRF and XSS, can set up SSL certs",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 6,
            "description": "Defends against brute-force/DDoS attacks",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Template",
        "subgroups": [
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ]
      }
    ]
  },
  {
    "section": "Code Quality",
    "groups": [
      {
        "group": "Code Construction",
        "subgroups": [
          {
            "level": 1,
            "description": "Basics (Code Complete): concise commenting, intermediate variables, no long functions, well-factored self-documenting code, eslint is setup",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 2,
            "description": "SOLID principals, knows popular eslint configs, and what eslint rules to break",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 3,
            "description": "Has worked on larger code base with multiple developers, to see/participate in larger code base organization across multiple team",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Has worked on a project over a long period with multiple developers, to see common pitfalls and what is actually practical and maintainable",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Code Readability",
        "subgroups": [
          {
            "level": 1,
            "description": "Good names for files, variables classes, methods etc. Attention paid to commit messages. Consistent white space usage. ",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 2,
            "description": "No long functions, comments explaining unusual code, bug fixes, code assumptions functions, comments explaining unusual code, bug fixes, code assumptions. Clean, precise commit messages. ",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 3,
            "description": "Code assumptions are verified using asserts, code flows naturally - no deep nesting of conditionals or methods. Commit messages tell a coherent story. ",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Code Organization",
        "subgroups": [
          {
            "level": 1,
            "description": "Methods are grouped logically or by accessibility. Basic separation of code into logical folders.",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 2,
            "description": "Code is grouped into regions and well commented with references to other source files. Each physical file has a unique purpose, for e.g. one class definition, one feature implementation etc. ",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 4,
            "description": "Code organization at a physical level closely matches design and looking at file names and folder distribution provides insights into design. Physical layout of source tree matches logical hierarchy and organization. The directory names and organization provide insights into the design of the system.",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Defensive Coding and Error Handling",
        "subgroups": [
          {
            "level": 2,
            "description": "Checks all arguments and asserts critical assumptions in code. Basic error handling around code that can throw exceptions/generate errors",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 3,
            "description": "Makes sure to check return values and check for exceptions around code that can fail. Ensures that error/exceptions leave program in good state, resources, connections and memory is all cleaned up properly.",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Codes to detect possible exception before, maintain consistent exception handling strategy in all layers of code, come up with guidelines on exception handling for entire system.",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 6,
            "description": "Has own library to help with defensive coding, writes unit tests that simulate faults",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Template",
        "subgroups": [
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ]
      },
      {
        "group": "Template",
        "subgroups": [
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ]
      }
    ]
  },
  {
    "section": "Team Development",
    "groups": [
      {
        "group": "Source Control",
        "subgroups": [
          {
            "level": 1,
            "description": "GUI, command line basics (add, push, pull, fetch), reading from github, writing to github (PRs, forks)",
            "skillsets": [
              "clone an existing git repository",
              "stage files using `git add --patch`",
              "create a commit",
              "push up to a remote repository",
              "create a new Github repository",
              "initialize a new git repository",
              "setup a github repository as a remote",
              "pull down from a remote repository",
              "tell git to ignore files with `.gitignore`",
              "create a Github pull request",
              "understands remote, fetch, pull, push, branch, log",
              "understands branch and branching"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 2,
            "description": "git command line (reset/revert), merge conflict resolution",
            "skillsets": [
              "understands SHA",
              "understands REF",
              "undo the previous commit using `git reset`",
              "revert a commit using `git revert`",
              "resolve basic merge conflicts",
              "understands the tree / directed graph",
              "understands fast-forward"
            ],
            "resources": false,
            "goals": [
              83
            ]
          },
          {
            "level": 3,
            "description": "git command line (rebase, cherry-pick), has worked in an org with branching and PRs",
            "skillsets": [
              "rebase a branch",
              "cherry-pick a commit",
              "use `git rebase --interactive`",
              "resolve more complex merge conflicts",
              "understands stash",
              "understands add, reset, rm, commit, cherry-pick",
              "understands git add --patch"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 4,
            "description": "git command depth (bisect, interactive rebase, submodules, multiple remotes, git push -f), commit hooks, Integration with other services (CI, Slack)",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Pairing",
        "subgroups": [
          {
            "level": 1,
            "description": "Beginning pairing",
            "skillsets": [
              "Write code with a pair",
              "Pair with someone at a higher skill level",
              "Pair with someone at your same skill level",
              "Pair on the same computer with one keyboard and pointer device",
              "Pair on the same computer with two keyboards and pointer devices"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 2,
            "description": "Intermediate pairing",
            "skillsets": [
              "Complete a project with a pair",
              "Explain the roles of driver and navigator in pair programming",
              "Designate and follow the roles of driver and navigator when pair programming",
              "Pair with someone at a lower skill level",
              "Understand and practice cognitive apprenticeship"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 4,
            "description": "Advanced pairing",
            "skillsets": [
              "Pair remotely",
              "Pair remotely with video",
              "Pair on separate computers with a shared editor",
              "Pair on separate computers with a shared IDE",
              "Pair without talking",
              "TDD Pair (one person writes tests, one person makes them pass)"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Technical Communication",
        "subgroups": [
          {
            "level": 1,
            "description": "Peers can understand what is being said. Good spelling and grammar.",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 2,
            "description": "Communication is effective, precise and more technical",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 4,
            "description": "Able to understand and communicate thoughts/design/ideas/specs in a unambiguous manner and adjusts communication as per the context (written, spoken, white-boarding, brainstorming, specing...etc.)",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Agile and Lean",
        "subgroups": [
          {
            "level": 2,
            "description": "Daily standup, track progress in ticket tracker",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 3,
            "description": "Code is deployed regularly through CI, at least 50% test coverage, basic user tracking and experiments",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Code is deployed multiple times a day, run through ~100% code coverage including functional/nonfunctional tests, features are validated with split testing before deemed finished",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 6,
            "description": "Validates functionality quickly using marketing and prototypes before anything is built, multivariate testing (dozens) with statistical analysis, knows when to pivot/persevere and has experienced multiple pivots",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Community Participation",
        "subgroups": [
          {
            "level": 2,
            "description": "Collects cool things on Twitter, files issues in repos, reads tech/programming blogs and podcasts regularly",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 3,
            "description": "Writes posts on Medium, *fixes* issues on github, maintains a programming journal with some colleciton of useful articles/tools. Attended conferences. ",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Actively maintains a popular OSS repo, benefits other programmers with their knowledge, has spoken at a conference. Maintains a blog in which personal insights and thoughts on programming are shared.",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 6,
            "description": "Has reinvented software development in some way, created a major, popular framework",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Template",
        "subgroups": [
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ]
      }
    ]
  },
  {
    "section": "More",
    "groups": [
      {
        "group": "Unix, shell, and terminal",
        "subgroups": [
          {
            "level": 1,
            "description": "Knows basic commands. Batch files/shell scripts. Understands environment variables, path, and package managers.",
            "skillsets": [
              "explain what the `.bashrc` and `.bash_profile` files do",
              "explain what a path is",
              "articulate the difference between an absolute and relative path",
              "articulate the difference between an `/`, `./` , `../`",
              "explain what these key commands do `control-c`, `control-d`, `control-z`, `control-a`, `control-e`",
              "explain what the $PATH environment variable is for",
              "add and remove paths from their $PATH",
              "install a package via homebrew",
              "explain what a UNIX `process` is",
              "search for a running process and kill it",
              "explain what `environment variables` are",
              "check the value of an environment variable",
              "set a new environment variable for all new shells",
              "tab complete git commands",
              "explain and use the following shell commands 'ls,cd,cat,pwd,less,touch,echo,mkdir,rm,ps,kill'",
              "colorize and customize their prompt",
              "install `git` via homebrew",
              "install `node` via homebrew",
              "install `sublime-text` via `brew cask`",
              "install `atom` via `brew cask`"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 2,
            "description": "write makefiles or bash scripts, good with terminal, editor, pipes, and knows lots of commands offhand",
            "skillsets": [
              "familiar with processes",
              "familiar with sudo",
              "familiar with redirects",
              "familiar with exit status",
              "familiar with relative vs absolute path",
              "create a bash alias",
              "write a basic bash script",
              "start and stop processes via `brew services`",
              "explain the file permission printed by 'ls -la'",
              "change the permissions of a file",
              "turn on infinite scroll back buffer on iTerm 2",
              "go back and forward one word with a key stroke",
              "disable the 'copy on text select' feature in terminal",
              "split screen in terminal",
              "open files in your preferred editor using a shell command",
              "duplicate the current line with one key command",
              "enable 'save of blur' or 'autosave' in editor",
              "paste from a clipboard history buffer (like jumpcut)"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "vim/emacs wizard, knows FHS, knows most commands offhand",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Keyboard and Typing",
        "subgroups": [
          {
            "level": 1,
            "description": "Core Keyboard",
            "skillsets": [
              "Type all 26 alphabetical keys without looking at the keyboard",
              "Write plain English at > 30 WPM",
              "Write code at > 15 WPM"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 3,
            "description": "Intermediate Keyboard",
            "skillsets": [
              "Type all 10 numeric keys without looking at the keyboard",
              "Write plain English at > 45 WPM",
              "Write code at > 20 WPM",
              "Find and apply keyboard shortcuts in commonly used applications",
              "Navigate text without using the mouse",
              "Remap modifier keys for faster use"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 4,
            "description": "Advanced Typing",
            "skillsets": [
              "Write plain English at > 70 WPM",
              "Write code at > 30 WPM",
              "Navigate the OS without using the mouse"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Wizard level keyboard skills",
            "skillsets": [
              "Write plain English at > 90 WPM",
              "Write code at > 35 WPM"
            ],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Dev Ops",
        "subgroups": [
          {
            "level": 2,
            "description": "Simple deployment",
            "skillsets": [
              "Provision a Heroku instance",
              "Configure a Heroku instance",
              "Deploy an app to Heroku"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 3,
            "description": "Production logs, heroku addons and managing live production",
            "skillsets": [
              "Check the logs of a Heroku app",
              "Debug a failed build on Heroku",
              "Select and integrate a Heroku add-on",
              "Maintain a production app on Heroku"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 4,
            "description": "Staging server, pipeline, and domain registration",
            "skillsets": [
              "Setup a staging server on Heroku",
              "Create and configure a pipeline on Heroku",
              "Register a domain name",
              "Point a domain to a GitHub pages site"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Provisioning and configuring contrainers",
            "skillsets": [
              "Provision a DigitalOcean container",
              "Configure a DigitalOcean container",
              "Start a DigitalOcean container",
              "Connect to a DigitalOcean container via SSH",
              "Install libraries on a DigitalOcean container",
              "Install a language runtime on a DigitalOcean container",
              "Deploy an app to a DigitalOcean container"
            ],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Interviewing",
        "subgroups": [
          {
            "level": 3,
            "description": "Basic Interviewing",
            "skillsets": [
              "Describe thought process in an interview",
              "Maintain composure in an interview",
              "Demonstrate confidence in an interview"
            ],
            "resources": false,
            "goals": [
              125
            ]
          },
          {
            "level": 3,
            "description": "Intermediate Interviewing",
            "skillsets": [
              "Prepare for an interview",
              "Engage the interviewer",
              "Clarify questions in an interview",
              "Solve problems in real-time in an interview",
              "Demonstrate competence in an interview",
              "Identify and explain common interview questions",
              "Identify and explain common interview stages"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 4,
            "description": "Live Interviewing 1",
            "skillsets": [
              "Demonstrate humility in an interview",
              "Demonstrate personality in an interview",
              "Identify and explain common biases in an interview process",
              "Neutralize common biases in an interview process",
              "Identify and explain common stresses for an interviewer",
              "Manage and counteract common stresses as an interviewee",
              "Communicate clearly and professionally with potential employer before interview",
              "Follow up after interview to thank interviewers and open up for next steps",
              "Dress, behave, and present oneself appropriately for an interview"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Template",
        "subgroups": [
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ]
      }
    ]
  },
  {
    "section": "Template",
    "groups": [
      {
        "group": "Template",
        "subgroups": [
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ]
      }
    ]
  }
]