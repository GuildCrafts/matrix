[
  {
    "section": "Programming",
    "groups": [
      {
        "group": "Requirements",
        "subgroups": [
          {
            "level": 1,
            "description": "Deliver solutions that fulfill specified requirements",
            "skillsets": [
              "Build solution that meets requirements",
              "Show that final solution meets requirements in a live presentation or written description"
            ],
            "resources": false,
            "goals": [
              174,
              176,
              181,
              182,
              37,
              202,
              133
            ]
          },
          {
            "level": 2,
            "description": "Clarify requirements by identifying missing and/or ambiguous areas",
            "skillsets": [
              "Identify missing and/or ambiguous areas in requirements",
              "Ask questions to gather requirements for missig areas",
              "Provide examples of different ways to write software requirements"
            ],
            "resources": false,
            "goals": [
              133
            ]
          },
          {
            "level": 3,
            "description": "Break down large project into individual stages with requirements",
            "skillsets": [
              "Synthesize project goals and high-level requirements",
              "Divide project into stages with distinct, separable goals",
              "Ask questions to gather requirements",
              "Define requirements"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Testing",
        "subgroups": [
          {
            "level": 1,
            "description": "Test functions",
            "skillsets": [
              "Write tests checking number of function arguments",
              "Write tests checking type of function argument(s)",
              "Write tests checking function return values",
              "Write tests checking exception handling within functions"
            ],
            "resources": false,
            "goals": [
              123,
              128,
              156,
              157,
              158,
              159,
              174,
              176,
              283
            ]
          },
          {
            "level": 2,
            "description": "Test objects and classes",
            "skillsets": [
              "Setup tool for measuring test coverage",
              "Explain what \"test coverage\" means",
              "Achieve 100% test coverage for a program",
              "Write code using test-driven development (TDD)",
              "Write a blog post explaining the benefits of TDD",
              "Use mocks and stubs to isolate classes in tests"
            ],
            "resources": false,
            "goals": [
              181,
              182,
              283
            ]
          },
          {
            "level": 3,
            "description": "Application-wide testing",
            "skillsets": [
              "Write end-to-end tests (AKA integration tests)",
              "Explain differences between unit tests and end-to-end tests",
              "Explain what behavior-driven development (BDD) is"
            ],
            "resources": false,
            "goals": [
              283
            ]
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Object Oriented Programming",
        "subgroups": [
          {
            "level": 1,
            "description": "Create basic classes",
            "skillsets": [
              "Use and explain reader and writer methods",
              "Use and explain private and public properties",
              "Use and explain constructors"
            ],
            "resources": false,
            "goals": [
              165,
              252
            ]
          },
          {
            "level": 2,
            "description": "Write programs using multiple classes",
            "skillsets": [
              "Explain single responsibility principles (single responsibility, open-closed, Liskov substitution, interface segregation and dependency inversion)",
              "Write a blog post explaining the difference between inheritance and composition, and example use cases for both"
            ],
            "resources": false,
            "goals": [
              165,
              191,
              252
            ]
          },
          {
            "level": 3,
            "description": "Implement design patterns",
            "skillsets": [
              "Explain what a design pattern is",
              "Explain Singleton, Factory, Strategy, Template, and Observer design patterns",
              "Explain what a hook method is"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Functional Programming",
        "subgroups": [
          {
            "level": 2,
            "description": "Understand core concepts",
            "skillsets": [
              "List the core concepts behind functional programming",
              "Explain pure functions, first-class/higher-order functions, and immutable values"
            ],
            "resources": false,
            "goals": [
              124,
              128,
              110
            ]
          },
          {
            "level": 3,
            "description": "Write functional program in JavaScript",
            "skillsets": [
              "Implement higher-order functions",
              "Use and explain map, reduce, and filter"
            ],
            "resources": false,
            "goals": [
              110
            ]
          },
          {
            "level": 4,
            "description": "Learn a functional programming language",
            "skillsets": [
              "Build a program with a functional programming language (eg. Clojure, Elixir, Scala)"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Data Structures and Algorithms",
        "subgroups": [
          {
            "level": 2,
            "description": "Implement basic data structures and algorithms",
            "skillsets": [
              "Whiteboard an illustration of arrays, hashes, stacks, queues, and linked lists",
              "Explain what time and space mean when describing algorithm complexity",
              "Explain difference in efficiency of checking for a value in an array vs hash table",
              "Implement merge sort, quick sort, and bubble sort functions",
              "Implement BFS and DFS functions"
            ],
            "resources": false,
            "goals": [
              123,
              144,
              159,
              156
            ]
          },
          {
            "level": 3,
            "description": "Understand Big O notation",
            "skillsets": [
              "Explain what Big O notation is",
              "Explain Big O values of merge sort, quick sort, and bubble sort"
            ],
            "resources": false,
            "goals": [
              123,
              158,
              159
            ]
          },
          {
            "level": 4,
            "description": "Advanced data structures and algorithms",
            "skillsets": [
              "Implement shortest-path algorithms", 
              "Implement divide and conquer algorithms",
              "Explain B-trees, Binary Search Trees, Red-Black Trees, Cartesian Trees, Splay Trees, and AVL Trees",
              "Explain various ways of representing graphs"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Mathematically prove algorithms",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Regular Expressions",
        "subgroups": [
          {
            "level": 3,
            "description": "Build basic regular expressions",
            "skillsets": [
              "Identify, explain, and apply special characters in a regular expression",
              "Identify, explain, and apply non-printable characters in a regular expression",
              "Identify, explain, and apply dot in a regular expression",
              "Identify, explain, and apply alternation in a regular expression",
              "Identify, explain, and apply character classes in a regular expression"
            ],
            "resources": false,
            "goals": [
              144
            ]
          },
          {
            "level": 4,
            "description": "Build intermediate regular expressions",
            "skillsets": [
              "Identify, explain, and apply shorthand character classes in a regular expression",
              "Identify, explain, and apply anchors in a regular expression",
              "Identify, explain, and apply word boundaries in a regular expression",
              "Identify, explain, and apply optional items in a regular expression",
              "Identify, explain, and apply repetition in a regular expression"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Build advanced regular expressions",
            "skillsets": [
              "Identify, explain, and apply grouping & capturing in a regular expression",
              "Identify, explain, and apply named groups in a regular expression",
              "Identify, explain, and apply backreferences in a regular expression",
              "Identify, explain, and apply mode modifiers in a regular expression",
              "Differentiate between regular expressions and a formal programming language"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 6,
            "description": "Ninja-level Regular Expressions",
            "skillsets": [
              "Identify, explain, and apply possessive quantifiers in a regular expression",
              "Identify, explain, and apply free-spacing & comments in a regular expression",
              "Identify, explain, and apply atomic grouping in a regular expression",
              "Identify, explain, and apply lookahead & lookbehind in a regular expression",
              "Identify, explain, and apply conditionals in a regular expression",
              "Cite differences in regular expression syntax between two or more languages"
            ],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Unix, shell, and terminal",
        "subgroups": [
          {
            "level": 1,
            "description": "Work with Unix processes and shell commands",
            "skillsets": [
              "Explain what the `.bashrc` and `.bash_profile` files do",
              "Explain what a path is",
              "Explain the difference between an absolute and relative path",
              "Explain the difference between an `/`, `./` , `../`",
              "Explain what the $PATH environment variable is for",
              "Add and remove paths from local $PATH",
              "Explain what a UNIX process is",
              "Search for a running process and kill it",
              "Explain what `environment variables` are",
              "Print the value of an environment variable",
              "Explain and use the following shell commands 'ls, cd, cat, pwd, less, touch, echo, mkdir, rm, ps, kill'",
              "Create a bash alias",
              "Explain the file permission printed by 'ls -la'",
              "Change the permissions of a file"
            ],
            "resources": false,
            "goals": [
              196,
              195
            ]
          },
          {
            "level": 2,
            "description": "Create bash scripts",
            "skillsets": [
              "Create a bash script",
              "Use and explain redirects",
              "Explain process exit codes",
              "Read environment variables",
              "Read arguments",
              "Spawn child processes",
              "Prompt for user input",
              "Read from STDIN"
            ],
            "resources": false,
            "goals": [
              196
            ]
          },
          {
            "level": 5,
            "description": "Use Vim",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Systems Programming",
        "subgroups": [
       {
            "level": 4,
            "description": "Understand compilers and interpreters",
            "skillsets": [
              "Explain what assembly is",
              "Explain block of assembly code",
              "Explain what virtual memory is"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Understand operating systems and networking programming",
            "skillsets": [
              "Explain kernel mode vs. user mode",
              "Understand socket-level programming",
              "Write multi-threaded code",
              "Understand processes and memory (heap and stack)"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Code Quality",
        "subgroups": [
          {
            "level": 1,
            "description": "Create well-organized and readable code",
            "skillsets": [
              "Format code with proper and consistent spacing",
              "Create descriptive, clearly-named functions, variables, CSS classes, and filenames that follow a consistent convention",
              "Use comments in code to explain unusual code, bugs fixes, and opportunities for refactoring",
              "Create directory names and organization that provide insights into the design of the system",
              "Separate files into logical folders",
              "Create concise and descriptive commit messages"
            ],
            "resources": false,
            "goals": [
              181,
              182,
              191,
              69,
              83,
              93,
              98,
              110,
              127,
              165,
              174,
              176,
              37,
              127,
              133,
              202
            ]
          },
          {
            "level": 2,
            "description": "Use linters",
            "skillsets": [
              "Setup and use ESlint"
            ],
            "resources": false,
            "goals": [
              191
            ]
          },
          {
            "level": 3,
            "description": "Work on a large codebase with multiple developers",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Work on a large codebase over a long period",
            "skillsets": [
              "Observe common areas of development inertia in large codebases"
            ],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      }
    ]
  },
  {
    "section": "JavaScript",
    "groups": [
      {
        "group": "JavaScript Programming",
        "subgroups": [
          {
            "level": 1,
            "description": "Write basic scripts",
            "skillsets": [
              "Explain and use variables",
              "Explain 'truthy' and 'falsey' and provide examples",
              "Explain the difference between == and ===",
              "Use and explain dot and bracket accessors",
              "Explain what JSON is",
              "Explain operator precedence and provide examples",
              "Use 'if', 'switch', 'while', 'for'",
              "Explain how 'this' gets its value and create a code example",
              "Explain difference between function declarations and function expressions",
              "Explain and provide example of a static function",
              "Implement exception handling using try/throw/catch",
              "Use Date and Time object",
              "Use Math object",
              "Use typeof method"
            ],
            "resources": true,
            "goals": [
              174,
              176,
              37,
              202,
              251
            ]
          },
          {
            "level": 2,
            "description": "Write object-oriented code",
            "skillsets": [
              "Use and explain function constructors",
              "Use and explain object literals",
              "Explain variable scoping, including lexical scopes and dynamics scopes",
              "Explain what a closure is and why they are used",
              "Explain prototypes",
              "Implement prototypical inheritance",
              "Explain the difference between Classic Inheritance and Prototypical Inheritance",
              "Show how to use private, public, and static variables/functions",
              "Show how to extend built-in objects"
            ],
            "resources": true,
            "goals": [
              165,
              252
            ]
          },
          {
            "level": 2,
            "description": "Write asynchronous code",
            "skillsets": [
              "Explain what a callback is write an example",
              "Explain what a Promise is and write an example",
              "Explain difference between callback and Promise",
              "Write a function that converts a callback API into a Promise API",
              "Use promises to defined both parallel and serial execution orders",
              "Throw and catch errors in a promise chain"
            ],
            "resources": true,
            "goals": [
              150,
              186
            ]
          },
          {
            "level": 5,
            "description": "Inner-workings",
            "skillsets": [
              "Explain how the JavaScript event loop works",
              "Explain how the V8 engine works",
              "Explain JIT compiling"
            ],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "JavaScript Debugging",
        "subgroups": [
          {
            "level": 1,
            "description": "Basic debugging",
            "skillsets": [
              "Read backtraces",
              "Use `console.log` to understand and pinpoint bugs",
              "Throw intentional errors for edge cases"
            ],
            "resources": false,
            "goals": [
              256
            ]
          },
          {
            "level": 2,
            "description": "Breakpoints",
            "skillsets": [
              "Log backtraces with `console.trace`",
              "Use debugger to set break points",
              "Use debugger to step up and down the call stack",
              "Use debugger to evaling code at a specific points"
            ],
            "resources": false,
            "goals": [
              256
            ]
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "ES6",
        "subgroups": [
          {
            "level": 2,
            "description": "Use ES6 syntax",
            "skillsets": [
              "Show and explain how arrow functions work",
              "Show and explain how arrow functions treat `this`",
              "Show how to set function argument defaults",
              "Show how to use spread operators",
              "Explain the uses of const and let",
              "Show how to use object literal property initializer shorthand",
              "Show how to use concise method assignment in object literals",
              "Show how to use computed property names in object literals",
              "Explain how `class` transpiles to an ES5 Constructor",
              "Define a class with both class and instance properties",
              "Import and export a single default export",
              "Import and export a set of named exports",
              "Use and explain async/await"
            ],
            "resources": true,
            "goals": []
          },
          {
            "level": 3,
            "description": "Transpile ES6 for production use",
            "skillsets": [
              "Explain browser ES6 compatability",
              "Setup babel to transpile ES6",
              "Setup babel using a .babelrc",
              "Name popular .babelrc configs and when to use babel-register babel-node and babel-polyfill"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 6,
            "description": "Contribute to babel or a babel plugin",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "JavaScript Performance",
        "subgroups": [
          {
            "level": 3,
            "description": "Identify common pitfalls",
            "skillsets": [
              "Explain the performance difference between defining class methods and instance variables inside a function constructor versus outside of the constructor using its prototype property",
              "Explain performance impact of closures",
              "Identify and methodically address common performance bottlenecks"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Understand garbage collection",
            "skillsets": [
              "Explain how garbage collection works in JavaScript",
              "Inspect heap to isolate memory leaks",
              "Explain how to optimize memory use"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Understand CPU performance",
            "skillsets": [
              "Profile CPU to find CPU-intensive functions",
              "Understand what makes code CPU-intensive"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "NodeJS",
        "subgroups": [
          {
            "level": 1,
            "description": "Use Node.js packages and modules",
            "skillsets": [
              "Explain package.json purpose, structure, and common properties",
              "Install packages as dependencies and development dependencies",
              "Read and write to files using built-in fs API",
              "Export objects via module.exports",
              "Import objects using require()",
              "Setup `npm start` and `npm test` sripts",
              "Use environment variables"
            ],
            "resources": false,
            "goals": [
              133,
              226,
              231,
              232,
              237,
              236,
              235,
              252,
              253,
              255
            ]
          },
          {
            "level": 4,
            "description": "Publish NPM packages",
            "skillsets": [
              "Create and publish a package via NPM",
              "Create a package with at least one executable",
              "Define which file is the 'main' file",
              "Setup continuous integration"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      }
    ]
  },
  {
    "section": "Frontend",
    "groups": [
      {
        "group": "HTML and CSS",
        "subgroups": [
          {
            "level": 1,
            "description": "Write basic HTML/CSS",
            "skillsets": [
              "Set font weights, families, styles, and sizes",
              "Use `ems` and explain how they're different than pixels",
              "Use relative and absolute paths to images in CSS",
              "Explain differences between inline, block, and inline-block",
              "Use relative and absolute positioning in CSS",
              "Explain the HTML tags: `html, head, body, script, link, title, div, span, a, button, p, ul, li, table, tbody, tr, th, td`",
              "Include stylesheets, javascripts and images in HTML",
              "Explain the box model",
              "Explain when to use an id versus a class",
              "Explain what these CSS selectors do: `.signup-form`, `.signup-form .first-name-field`, `table.stripped-table`, `a.button:hover`, `.IconButton > button`, `table > tr:nth-child(odd)`",
              "Explain these pseudo-selectors `:hover,:focus,:active,:visited,:disabled,:checked,:nth-child`",
              "Explan these CSS properties: `border, margin, padding, height, width, background, display, color, font-size, font-weight, flex-direction, flex-wrap, align-items, align-content, flex-grow`",
              "Inspect and edit an element in the DOM tree using Chrome Developer Tools",
              "Implement a two column layout with a fixed-width sidebar and flexible width main area",
              "Explain what a 'reset stylesheet' is and why they are used",
              "Show how to write CSS inline in an HTML document",
              "Create a link to a specific position on the page using an anchor tag",
              "Explain what a CSS sprite is"
            ],
            "resources": false,
            "goals": [
              93,
              251,
              253
            ]
          },
          {
            "level": 2,
            "description": "Use media queries",
            "skillsets": [
              "Explain what a media-query is and how they are used",
              "Create a layout that is two columns on when viewed in a desktop browser full-screen, and one column when viewed from a phone"
            ],
            "resources": false,
            "goals": [
              150,
              120,
              83,
              93
            ]
          },
          {
            "level": 3,
            "description": "Use CSS frameworks",
            "skillsets": [
              "Build pages using Twitter Bootstrap, Foundation, and a Material Design framework"
            ],
            "resources": false,
            "goals": [
              150,
              120,
              83,
              93
            ]
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "JavaScript in the Browser",
        "subgroups": [
          {
            "level": 1,
            "description": "Work with DOM operations and events",
            "skillsets": [
              "Select, insert, and modify DOM nodes",
              "Add data attributes to elements and use as selector in JavaScript",
              "Prevent default browser behavior (eg. prevent a form from being submitted when button is clicked)",
              "Bind and respond to browser events such as form submit, button click, and scroll",
              "Explain what event delegation is and when it is useful",
              "Explain coding patterns to avoid defining globals"
            ],
            "resources": true,
            "goals": [
              120,
              181,
              182,
              235,
              236,
              251,
              253
            ]
          },
          {
            "level": 2,
            "description": "Implement XHR requests (AJAX)",
            "skillsets": [
              "Explain what XHR is",
              "Make a XHR request without any libraries",
              "Make a XHR request using jQuery",
              "Examine XHR request using the Chrome Developer Tools",
              "Explain CORS and common workarounds",
              "Explain what JSONP is",
              "Explain `fetch` method and browser support"
            ],
            "resources": true,
            "goals": [
              150,
              83
            ]
          },
          {
            "level": 3,
            "description": "Use browser storage",
            "skillsets": [
              "Explain what a cookie is",
              "Read and write cookie values",
              "Explain what localStorage is",
              "Read and write to localStorage",
              "Explain the difference between localStorage and sessionStorage",
              "Explain IndexedDB and its differences to localStorage"
            ],
            "resources": true,
            "goals": [
              253
            ]
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "React",
        "subgroups": [
          {
            "level": 3,
            "description": "Build React apps",
            "skillsets": [
              "Explain JSX",
              "Explain and demonstrate various lifecycle hook methods",
              "Explain and demonstrate difference between state and props",
              "Pass handlers/functions between components",
              "Use react-router",
              "Build a todo app with React from scratch",
              "Deploy app online"
            ],
            "resources": false,
            "goals": [
              120,
              226,
              231,
              232,
              237,
              236,
              235
            ]
          },
          {
            "level": 3,
            "description": "Manage state using various methods",
            "skillsets": [
              "Explain and implement stateful and stateless components",
              "Explain and whiteboard Flux architecture",
              "Use Redux",
              "Use Mobx"
            ],
            "resources": false,
            "goals": [
              226,
              231,
              232,
              237,
              236,
              235
            ]
          },
          {
            "level": 4,
            "description": "Perform advanced React tasks",
            "skillsets": [
              "Use Relay and GraphQL",
              "Implement tests for React app",
              "Implement server-rendering and explain use cases"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "UI Design",
        "subgroups": [
          {
            "level": 1,
            "description": "Wireframe UIs",
            "skillsets": [
              "Create wireframes with Balsamiq for a basic web app"
            ],
            "resources": false,
            "goals": [
              302
            ]
          },
          {
            "level": 2,
            "description": "Edit images",
            "skillsets": [
              "Resize, crop, and optimize images in Photoshop/Sketch",
              "Mock up a simple page with Photoshop/Sketch",
              "Explain common typographic terms (serif, sans-serif, kerning)",
              "Use Google Fonts and Typekit"
            ],
            "resources": false,
            "goals": [
              302
            ]
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Webpack",
        "subgroups": [
          {
            "level": 3,
            "description": "Write a basic config file",
            "skillsets": [
              "Install Webpack",
              "Setup devserver with hot loading",
              "Explain and implement plugins including `html-webpack-plugin`, `webpack-dashboard`, and `extract-text-webpack-plugin`"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 4,
            "description": "Setup universal app",
            "skillsets": [
              "Setup webpack configurations that support both client and server-rendering"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "React Native",
        "subgroups": [
          {
            "level": 5,
            "description": "Create an app",
            "skillsets": [
              "Build a simple app (eg. todo)",
              "Explain native UI components",
              "Publish app on App Store",
              "Test app in Android emulator"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Template",
        "subgroups": [
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ]
      }
    ]
  },
  {
    "section": "Backend",
    "groups": [
      {
        "group": "Server Applications",
        "subgroups": [
          {
            "level": 1,
            "description": "Understand request lifecycle",
            "skillsets": [
              "Explain the request & response lifecycle",
              "Explain the difference between a standard HTTP request and an AJAX/XHR request",
              "Draw a diagram showing how data/messages flow from the browser, to the server and back again with detail about the contents sent within those messages",
              "Explain the difference between a `GET` and a `POST` request",
              "Explain what a port is",
              "Explain how a web browser talks to a web server",
              "Create an app that serves multiple static view files",
              "Create an app that renders views with dynamic data",
              "Explain the difference between 'front end' and 'back end'",
              "Explain step-by-step details of what happens from the moment you enter an address in your browser to the moment the page finishes rendering"
            ],
            "resources": false,
            "goals": [
              150,
              64,
              69,
              98,
              194,
              253,
              255
            ]
          },
          {
            "level": 2,
            "description": "Implement common web app features",
            "skillsets": [
              "Implement logging in a web app",
              "Use custom environment variables",
              "Implement server-side routing in a web app",
              "Render `HTML` from a `pug` template in response to a request",
              "Render `JSON` in response to a request",
              "Create a web app with client-side rendering",
              "Implement pagination",
              "Explain two API pagination impementations",
              "Implement authorization in a web app",
              "Implement authentication in a web app",
              "Explain the difference between authorization vs. authentication",
              "Explain and use websockets",
              "Use OAuth to authenticate with a third-party service",
              "Implement file upload",
              "Implement redirects",
              "Implement authentication using cookies",
              "Implement graceful error handling (display 500 page on server error)",
              "Use HTTPS"
            ],
            "resources": false,
            "goals": [
              181,
              182,
              255
            ]
          },
          {
            "level": 3,
            "description": "Understand MVC",
            "skillsets": [
              "Explain the Model-View-Controller pattern in a web app"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Databases",
        "subgroups": [
          {
            "level": 1,
            "description": "Use relational databases",
            "skillsets": [
              "Install Postgres",
              "Start and stop Postgres using command line",
              "Create and delete Postgres databases using command line",
              "Use `psql` to connect to specific database",
              "Use `psql` to list a database's tables",
              "Use `psql` to list a database table's columns",
              "Write and execute SQL in `psql` to create a table with multiple columns of different types",
              "Write and execute SQL in `psql` to insert data into a table",
              "Write select queries that use the following features: `*, FROM, WHERE, ORDER`",
              "Write and execute SQL in `psql` to update data in a table",
              "Write and execute SQL in `psql` to delete data in a table",
              "Design a schema with two tables that have a 1-1 relationship",
              "Design a schema with two tables that have a 1-N relationship",
              "Design a schema with two tables that have an N-N relationship",
              "Write a 1-1 relationship query`",
              "Write a 1-N relationship query`",
              "Write a N-N relationship query`",
              "Understand ACID principles at a high level, and explain why they are useful"
            ],
            "resources": false,
            "goals": [
              64,
              69,
              96,
              98,
              181,
              182,
              178,
              226,
              254,
              255,
              192
            ]
          },
          {
            "level": 2,
            "description": "Use indexes, transactions, and complex queries",
            "skillsets": [
              "Write a query that joins more than 2 tables",
              "Explain the difference between INNER, FULL OUTER, LEFT OUTER, & RIGHT OUTER joins",
              "Explain the difference between a normalized and denormalized schema",
              "Explain how database indexes work and their costs/benefits",
              "Create an index on a populated table and benchmark speed of inserting and reading data before and after adding the index",
              "Create an index that has a uniqueness constraint",
              "Use transactions to ensure your changes are gauranteed all-or-nothing"
            ],
            "resources": false,
            "goals": [
              126,
              127,
              181,
              182,
              186,
              235,
              231
            ]
          },
          {
            "level": 3,
            "description": "Use ORMs and NoSQL databases",
            "skillsets": [
              "Setup and use an ORM",
              "Explain how an ORM works",
              "Install and read/write data using MongoDB",
              "Install and read/write data using Redis",
              "Convert a SQL schema into a document store",
              "Explain the differences between a relational database, a document store database, and a key-value database",
              "Explain what data migrations are and why they are useful"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 4,
            "description": "Understand advanced features and inner-workings",
            "skillsets": [
              "Create SQL views and explain use cases",
              "Explain stored procedures and tradeoffs of using them versus having SQL in application layer",
              "Explain difference between clustered and non-clustered indexes",
              "Use hot standby and perform database backup/restoration",
              "Explain how databases store data",
              "Explain what sharding is and strategies for implementing it",
              "Explain how databases can be mirrored and replicated",
              "Explain how two-phase commit works"
            ],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "APIs",
        "subgroups": [
          {
            "level": 1,
            "description": "Consume APIs",
            "skillsets": [
              "Use `cURL` to fetch data from an API that requires authorization",
              "Use a client libary to fetch data from an API that requires authorization",
              "Explain common methods of API authentication",
              "Explain how oAuth authentication works",
              "Explain SOAP and REST"
            ],
            "resources": false,
            "goals": [
              194
            ]
          },
          {
            "level": 2,
            "description": "Build an API",
            "skillsets": [
              "Describe RESTful API design",
              "Show two examples of what a conventional API JSON response might look like (eg. jsonapi.org)",
              "Write out the HTTP methods and paths for a nested RESTful resource",
              "Implement error HTTP status codes and responses"
            ],
            "resources": false,
            "goals": [
              127,
              194,
              255
            ]
          },
          {
            "level": 4,
            "description": "Understand microservices",
            "skillsets": [
              "Explain what a microservice is",
              "Describe benefits and downsides of microservice architecture",
              "Describe when building microservices is appropriate versus not",
              "Describe how to determine microservice boundaries",
              "Visually describe example of monolith application split into microservices"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 4,
            "description": "Build advanced APIs",
            "skillsets": [
              "Build a GraphQL API",
              "Build an API delivered through Fastly"
            ],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "HTTP",
        "subgroups": [
          {
            "level": 1,
            "description": "Understand headers and methods",
            "skillsets": [
              "Explain the different parts of a URL",
              "Explain difference between a GET and POST",
              "Explain the headers `Accepts`, `Content-type`",
              "Explain status codes 201, 202, 204, 301, 302, 401, 403",
              "List commonly used HTTP headers and what they do"
            ],
            "resources": [],
            "goals": [
              194,
              255
            ]
          },
          {
            "level": 2,
            "description": "Understand DNS and TCP",
            "skillsets": [
              "Explain how DNS works",
              "Explain how TCP works",
              "Explain the difference between TCP and HTTP",
              "Explain how HTTPS works"
            ],
            "resources": [],
            "goals": [
              181,
              182,
              194
            ]
          },
          {
            "level": 5,
            "description": "Understand HTTP caching",
            "skillsets": [
              "Explain how eTags, expires, and Last-Modified work",
              "Explain how gzip works"
            ],
            "resources": [],
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Deployment",
        "subgroups": [
          {
            "level": 2,
            "description": "Deploy to Heroku",
            "skillsets": [
              "Build code for production",
              "Deploy app to Heroku",
              "Check the logs of a Heroku app",
              "Debug a failed build on Heroku",
              "Integrate a Heroku add-on",
              "Register a domain name",
              "Setup a staging server on Heroku"
            ],
            "resources": false,
            "goals": [
              255,
              192
            ]
          },
          {
            "level": 2,
            "description": "Use a CI pipeline",
            "skillsets": [
              "Setup a CI system",
              "Setup automatic deploys when all tests pass"
            ],
            "resources": false,
            "goals": [
              192
            ]
          },
          {
            "level": 4,
            "description": "Use containers",
            "skillsets": [
              "Provision a DigitalOcean container",
              "Configure a DigitalOcean container",
              "Start a DigitalOcean container",
              "Connect to a DigitalOcean container via SSH",
              "Install libraries on a DigitalOcean container",
              "Install a language runtime on a DigitalOcean container",
              "Deploy an app to a DigitalOcean container"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Setup Docker",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Security",
        "subgroups": [
          {
            "level": 2,
            "description": "Explain common web security issues",
            "skillsets": [
              "Explain CSRF and how to protect against it",
              "Explain XSS and how to protect against it",
              "Explain SQL injection and how to protect against it",
              "Explain how HTTPS is \"secure\"?"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 6,
            "description": "Understand brute-force/DDoS attacks",
            "skillsets": [
              "Explain what a brute-force/DDoS attack is",
              "Explain how to defent against a brute-force/DDoS attack"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Template",
        "subgroups": [
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ]
      }
    ]
  },
  {
    "section": "Collaboration",
    "groups": [
      {
        "group": "Git",
        "subgroups": [
          {
            "level": 1,
            "description": "Commit and push changes",
            "skillsets": [
              "Clone a remote repository",
              "Create a new branch",
              "Stage files for commit using `git add`",
              "Create a commit",
              "Change the most recent commit message",
              "Merge two branches",
              "Push to a specified branch in a remote repository",
              "Pull down a feature branch from a remote repository",
              "Create a new git repository and push to a new Github repository",
              "Add and remove Github repositories as remotes",
              "Ignore files with `.gitignore`",
              "Create a Github pull request",
              "Resolve merge conflicts",
              "Explain how Git is \"distributed\""
            ],
            "resources": false,
            "goals": [
              181,
              182,
              226,
              231,
              232,
              237,
              236,
              235,
              256
            ]
          },
          {
            "level": 2,
            "description": "Revert changes",
            "skillsets": [
              "Create a new commit that undoes the previous commit",
              "Revert codebase back to a specific commit",
              "Revert a specified file to a specific version committed previously",
              "Explain difference between reset --HARD and --SOFT",
              "Use `reflog` to revert codebase"
            ],
            "resources": false,
            "goals": [
              83,
              256
            ]
          },
          {
            "level": 3,
            "description": "Rebase and cherry-pick",
            "skillsets": [
              "Rebase a branch (pull latest commits from remote master branch into a local feature branch)",
              "Explain difference between rebase and merge",
              "Use `git rebase --interactive` to squash, rename, and reorder commits",
              "Use cherry-pick to copy specific commits between branches",
              "Use git add --patch",
              "Explain git tags and common use cases on teams and in open source"
            ],
            "resources": false,
            "goals": [
              256
            ]
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Pairing",
        "subgroups": [
          {
            "level": 1,
            "description": "Pairing",
            "skillsets": [
              "Pair with someone at a higher skill level",
              "Pair with someone at your same skill level",
              "Pair with someone at a lower skill level",
              "Follow the roles of driver and navigator when pair programming",
              "Pair on the same computer with one keyboard and pointer device",
              "Pair on the same computer with two keyboards and pointer devices",
              "Pair remotely with ScreenHero",
              "TDD Pair (one person writes tests, one person makes them pass)"
            ],
            "resources": false,
            "goals": [
              256
            ]
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": true
      },
      {
        "group": "Technical Documentation",
        "subgroups": [
          {
            "level": 3,
            "description": "Create useful, readable documentation.",
            "skillsets": [],
            "resources": false,
            "goals": [
              133
            ]
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Engineering Process",
        "subgroups": [
          {
            "level": 1,
            "description": "Track work using Kanban board",
            "skillsets": [
              "Explain Kanban process",
              "Create a Kanban board for a solo project",
              "Create a Kanban board for a team project which includes code review and stakeholder approval before release"
            ],
            "resources": true,
            "goals": [
              181,
              182
            ]
          },
          {
            "level": 2,
            "description": "Estimate and measure work capacity",
            "skillsets": [
              "Explain shortfalls of time-based estimation",
              "Explain point-based estimation",
              "Explain why Fibonnaci scale is useful for point-based estimation",
              "Explain T-shirt estimation as alternative to points",
              "Explain estimation processes (eg. planning poker)",
              "Explain how to estimate completion of future work using velocity"
            ],
            "resources": true,
            "goals": []
          },
          {
            "level": 3,
            "description": "Implement Scrum",
            "skillsets": [
              "Explain differences between Scrum and Kanban",
              "Explain Scrum team roles",
              "Explain purpose of daily standup",
              "Explain retrospective purpose and process",
              "Implement Scrum on a multi-week project"
            ],
            "resources": true,
            "goals": []
          },
          {
            "level": 4,
            "description": "Use product development methodologies",
            "skillsets": [
               "Use Lean Startup process",
               "Use Google design sprints"
            ],
            "resources": true,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Template",
        "subgroups": [
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ]
      }
    ]
  },
  {
    "section": "Misc",
    "groups": [
      {
        "group": "Keyboard Typing",
        "subgroups": [
          {
            "level": 1,
            "description": "Beginner Keyboard",
            "skillsets": [
              "Type all 26 alphabetical keys without looking at the keyboard",
              "Write plain English at > 30 WPM",
              "Write code at > 15 WPM"
            ],
            "resources": false,
            "goals": [
              256
            ]
          },
          {
            "level": 3,
            "description": "Intermediate Keyboard",
            "skillsets": [
              "Type all 10 numeric keys without looking at the keyboard",
              "Write plain English at > 45 WPM",
              "Write code at > 20 WPM",
              "Find and apply keyboard shortcuts in commonly used applications",
              "Navigate text without using the mouse",
              "Remap modifier keys for faster use"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 4,
            "description": "Advanced Typing",
            "skillsets": [
              "Write plain English at > 70 WPM",
              "Write code at > 30 WPM",
              "Navigate the OS without using the mouse"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 5,
            "description": "Wizard level keyboard skills",
            "skillsets": [
              "Write plain English at > 90 WPM",
              "Write code at > 35 WPM"
            ],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Onboarding",
        "subgroups": [
          {
            "level": 2,
            "description": "Onboard onto new codebases",
            "skillsets": [
              "Look at code written by another developer and understand/explain what the code does",
              "Look at large application codebase and breakdown how the code works and is organized",
              "Learn a new programming language/framework quickly"
            ],
            "resources": false,
            "goals": [
              125,
              291
            ]
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Interviewing",
        "subgroups": [
          {
            "level": 3,
            "description": "Basic Interviewing",
            "skillsets": [
              "Describe thought process in an interview",
              "Maintain composure in an interview",
              "Demonstrate confidence in an interview",
              "Able to solve simple programming problems under time pressure"
            ],
            "resources": false,
            "goals": [
              125,
              291
            ]
          },
          {
            "level": 3,
            "description": "Intermediate Interviewing",
            "skillsets": [
              "Prepare for an interview",
              "Engage the interviewer",
              "Clarify questions in an interview",
              "Solve problems in real-time in an interview",
              "Demonstrate competence in an interview",
              "Identify and explain common interview questions",
              "Identify and explain common interview stages"
            ],
            "resources": false,
            "goals": [
              125,
              291
            ]
          },
          {
            "level": 4,
            "description": "Live Interviewing 1",
            "skillsets": [
              "Demonstrate humility in an interview",
              "Demonstrate personality in an interview",
              "Identify and explain common biases in an interview process",
              "Neutralize common biases in an interview process",
              "Identify and explain common stresses for an interviewer",
              "Manage and counteract common stresses as an interviewee",
              "Communicate clearly and professionally with potential employer before interview",
              "Follow up after interview to thank interviewers and open up for next steps",
              "Dress, behave, and present oneself appropriately for an interview"
            ],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ],
        "resource": false
      },
      {
        "group": "Template",
        "subgroups": [
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ]
      }
    ]
  },
  {
    "section": "Template",
    "groups": [
      {
        "group": "Template",
        "subgroups": [
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          },
          {
            "level": 0,
            "description": "",
            "skillsets": [],
            "resources": false,
            "goals": []
          }
        ]
      }
    ]
  }
]
